version: '3.8'

services:
  # PostgreSQL - Base de datos para CQRS Command (escritura)
  postgres:
    image: postgres:17-alpine
    container_name: agromercado-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-postgres.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - agromercado-network

  # MongoDB - Base de datos para CQRS Query (lectura)
  mongodb:
    image: mongo:7
    container_name: agromercado-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - agromercado-network

  # RabbitMQ - Sistema de mensajería para eventos
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: agromercado-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"    # Puerto AMQP
      - "15672:15672"  # Puerto de administración web
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - agromercado-network

volumes:
  postgres_data:
    driver: local
  mongodb_data:
    driver: local
  rabbitmq_data:
    driver: local

networks:
  agromercado-network:
    driver: bridge
